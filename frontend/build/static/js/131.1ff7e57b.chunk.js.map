{"version":3,"sources":["containers/Box/config.js","containers/Box/helperfunc.js","containers/Box/GridLayout.js"],"names":["layoutConfig","className","autoSize","verticalCompact","cols","lg","md","sm","xs","xxs","breakpoints","draggableHandle","isResizable","rowHeight","margin","gutter","indexOfBoxfunc","allBox","uid","boxIndex","forEach","box","index","toString","deleteBox","boxActions","saveBox","ResponsiveReactGridLayout","WidthProvider","Responsive","GridLayout","props","onLayoutChange","bind","breakPointChange","autoHeight","state","breakpoint","this","setState","nextProps","reload","layouts","layout","i","x","y","h","w","size","newBreakpoint","height","self","map","singleBox","indexOfBox","Math","ceil","setTimeout","Layouts","mdLayouts","lgLayouts","smLayouts","xsLayouts","xxsLayouts","push","parseInt","generateLayoutfunc","boxSettings","onDragStop","onResizeStop","onBreakpointChange","key","debounceTimeout","onResize","data","style","paddingRight","paddingBottom","title","onClick","DeleteOutlined","type","SwapOutlined","content","reactComponent","Component","connect","Box"],"mappings":"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","file":"static/js/131.1ff7e57b.chunk.js","sourcesContent":["const layoutConfig = {\r\n  className: 'isoCardBoxLayout',\r\n  autoSize: true,\r\n  verticalCompact: true,\r\n  cols: { lg: 96, md: 96, sm: 96, xs: 96, xxs: 96 },\r\n  breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 200 },\r\n  draggableHandle: '.isoDragBox',\r\n  isResizable: true,\r\n  rowHeight: 1,\r\n  margin: [0, 0],\r\n};\r\n\r\nconst gutter = {\r\n  gutterWidth: 10,\r\n  gutterHeight: 10,\r\n};\r\nexport { layoutConfig, gutter };\r\n","const generateLayoutfunc = allBox => {\r\n  const mdLayouts = [];\r\n  const lgLayouts = [];\r\n  const smLayouts = [];\r\n  const xsLayouts = [];\r\n  const xxsLayouts = [];\r\n  allBox.forEach(box => {\r\n    mdLayouts.push({\r\n      ...box,\r\n      x: parseInt(box.size.md.x, 10),\r\n      y: parseInt(box.size.md.y, 10),\r\n      h: parseInt(box.size.md.h, 10),\r\n      w: parseInt(box.size.md.w, 10),\r\n      i: box.size.md.i.toString(),\r\n    });\r\n    lgLayouts.push({\r\n      ...box,\r\n      x: parseInt(box.size.lg.x, 10),\r\n      y: parseInt(box.size.lg.y, 10),\r\n      h: parseInt(box.size.lg.h, 10),\r\n      w: parseInt(box.size.lg.w, 10),\r\n      i: box.size.lg.i.toString(),\r\n    });\r\n    smLayouts.push({\r\n      ...box,\r\n      x: parseInt(box.size.sm.x, 10),\r\n      y: parseInt(box.size.sm.y, 10),\r\n      h: parseInt(box.size.sm.h, 10),\r\n      w: parseInt(box.size.sm.w, 10),\r\n      i: box.size.sm.i.toString(),\r\n    });\r\n    xsLayouts.push({\r\n      ...box,\r\n      x: parseInt(box.size.xs.x, 10),\r\n      y: parseInt(box.size.xs.y, 10),\r\n      h: parseInt(box.size.xs.h, 10),\r\n      w: parseInt(box.size.xs.w, 10),\r\n      i: box.size.xs.i.toString(),\r\n    });\r\n    xxsLayouts.push({\r\n      ...box,\r\n      x: parseInt(box.size.xxs.x, 10),\r\n      y: parseInt(box.size.xxs.y, 10),\r\n      h: parseInt(box.size.xxs.h, 10),\r\n      w: parseInt(box.size.xxs.w, 10),\r\n      i: box.size.xxs.i.toString(),\r\n    });\r\n  });\r\n  return {\r\n    md: mdLayouts,\r\n    lg: lgLayouts,\r\n    sm: smLayouts,\r\n    xs: xsLayouts,\r\n    xxs: xxsLayouts,\r\n  };\r\n};\r\n\r\nconst indexOfBoxfunc = (allBox, uid) => {\r\n  let boxIndex = -1;\r\n  allBox.forEach((box, index) => {\r\n    if (box.uid.toString() === uid.toString()) {\r\n      boxIndex = index;\r\n    }\r\n  });\r\n  return boxIndex;\r\n};\r\n\r\nexport { generateLayoutfunc, indexOfBoxfunc };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport { ReactElementResize } from 'react-element-resize';\r\nimport { DeleteOutlined, SwapOutlined } from '@ant-design/icons';\r\nimport boxActions from '@iso/redux/box/actions';\r\nimport { layoutConfig, gutter } from './config';\r\nimport { generateLayoutfunc, indexOfBoxfunc } from './helperfunc';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport './box.css';\r\n\r\nconst { deleteBox, saveBox } = boxActions;\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nclass GridLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLayoutChange = this.onLayoutChange.bind(this);\r\n    this.breakPointChange = this.breakPointChange.bind(this);\r\n    this.autoHeight = this.autoHeight.bind(this);\r\n    this.state = {\r\n      breakpoint: 'lg',\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.setState({ allBox: this.props.allBox });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.reload) {\r\n      this.setState({ allBox: nextProps.allBox });\r\n    }\r\n  }\r\n  onLayoutChange(layouts) {\r\n    const { allBox } = this.state;\r\n    layouts.forEach((layout) => {\r\n      const boxIndex = indexOfBoxfunc(allBox, layout.i);\r\n      if (boxIndex !== -1) {\r\n        const { x, y, h, w, i } = layout;\r\n        allBox[boxIndex].size[this.state.breakpoint] = { x, y, h, w, i };\r\n      }\r\n    });\r\n    this.setState({ allBox });\r\n    this.props.saveBox(allBox);\r\n  }\r\n  breakPointChange(newBreakpoint) {\r\n    // this.breakpoint = newBreakpoint;\r\n    this.setState({ breakpoint: newBreakpoint });\r\n    // Device type can be accesssed from this.breakpoint variable\r\n  }\r\n  autoHeight(uid, { height }) {\r\n    const { allBox, breakpoint } = this.state;\r\n    const self = this;\r\n    if (height === 0) {\r\n      return;\r\n    }\r\n    allBox.map((singleBox) => {\r\n      const indexOfBox = indexOfBoxfunc(allBox, uid);\r\n      if (\r\n        allBox[indexOfBox].size[breakpoint].h !==\r\n        Math.ceil(height / layoutConfig.rowHeight)\r\n      ) {\r\n        allBox[indexOfBox].size[breakpoint].h = Math.ceil(\r\n          height / layoutConfig.rowHeight\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n    setTimeout(() => {\r\n      self.setState({ allBox });\r\n    }, 1);\r\n  }\r\n  render() {\r\n    const { allBox } = this.state;\r\n    const { deleteBox } = this.props;\r\n    const Layouts = generateLayoutfunc(allBox);\r\n    const renderBox = (singleBox) => {\r\n      return (\r\n        <div className=\"isomorphicSingleCardHolder\" key={singleBox.i}>\r\n          <ReactElementResize\r\n            debounceTimeout={200}\r\n            onResize={(data) => {\r\n              this.autoHeight(singleBox.i, data);\r\n            }}\r\n          >\r\n            {(data) => (\r\n              <div\r\n                className=\"isomorphicSingleCard\"\r\n                style={{\r\n                  paddingRight: `${Math.ceil(gutter.gutterWidth)}px`,\r\n                  paddingBottom: `${Math.ceil(gutter.gutterHeight)}px`,\r\n                }}\r\n              >\r\n                <div className=\"isoCardBox\">\r\n                  <div className=\"isoCardBoxHeader\">\r\n                    <h3>{singleBox.title}</h3>\r\n\r\n                    <div className=\"isoCardControl\">\r\n                      <button\r\n                        className=\"isoDeleteBtn\"\r\n                        onClick={() => deleteBox(singleBox.i)}\r\n                      >\r\n                        <DeleteOutlined />\r\n                      </button>\r\n                      <button className=\"isoDragBox\" type=\"button\">\r\n                        <SwapOutlined />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"isoCardBoxBody\">\r\n                    <p>{singleBox.content}</p>\r\n                    {singleBox.reactComponent ? (\r\n                      <singleBox.reactComponent />\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </ReactElementResize>\r\n        </div>\r\n      );\r\n    };\r\n    const boxSettings = {\r\n      ...layoutConfig,\r\n      layouts: Layouts,\r\n      onDragStop: this.onLayoutChange,\r\n      onResizeStop: this.onLayoutChange,\r\n      onBreakpointChange: this.breakPointChange,\r\n    };\r\n    return (\r\n      <div className=\"isoCardBoxContentWrapper\">\r\n        <ResponsiveReactGridLayout {...boxSettings}>\r\n          {Layouts.md.map(renderBox)}\r\n        </ResponsiveReactGridLayout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    allBox: state.Box.allBox,\r\n    reload: state.Box.reload,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {\r\n  saveBox,\r\n  deleteBox,\r\n})(GridLayout);\r\n"],"sourceRoot":""}