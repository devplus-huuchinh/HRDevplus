{"version":3,"sources":["containers/Quiz/SingleQuestion.js","containers/Quiz/MultipleQuestion.js","containers/Quiz/Question.js","containers/Quiz/GettingStartedQuiz.js","containers/Quiz/SingleQuiz.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","components/utility/boxTitle.style.js","components/utility/boxTitle.js","components/utility/box.style.js","components/utility/box.js","components/utility/contentHolder.style.js","components/utility/contentHolder.js","assets/styles/constants.js","components/uielements/checkbox.js","components/uielements/styles/checkbox.style.js","components/uielements/styles/radiobox.style.js","components/uielements/radio.js"],"names":["SingleQuestion","props","showResult","e","setState","onRadioChange","answer","target","value","answerQuestion","state","setQuestionAnswer","alert","nextQuestion","this","question","answers","submitted","total","activeQuestion","correct","wrong","console","log","showAnswer","onChange","options","disabled","type","onClick","Component","MultipleQuestion","onCheckboxChange","Question","GettingStartedQuiz","startQuiz","rowStyle","basicStyle","colStyle","gutter","style","justify","md","sm","xs","title","id","connect","quiz","actions","useEffect","getQuestionData","questions","gettingStarted","data","LayoutContentWrapper","styled","div","className","children","BoxTitle","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","WDContentHolderWrapper","ContentHolderWrapper","WithDirection","colors","blue","deep","light","lighter","soft","black","shadow","grey","darker","dark","medium","N30","green","white","purple","orange","grid","width","display","flexFlow","marginBottom","checkbox","ComponentName","AntCheckbox","CheckboxGroup","Group","AntRadiobox","RadioBox","RadioGroup","RadioButton","Button"],"mappings":"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","file":"static/js/105.ca85af08.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { RadioGroup } from '@iso/components/uielements/radio';\r\nimport Button from '@iso/components/uielements/button';\r\n\r\nexport default class SingleQuestion extends Component {\r\n  // Then we add our constructor which receives our props\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answer: '',\r\n      showResult: false,\r\n    };\r\n  }\r\n  showResult = (e) => {\r\n    this.setState({ showResult: true });\r\n  };\r\n  onRadioChange = (e) => {\r\n    this.setState({ answer: e.target.value });\r\n  };\r\n  answerQuestion = (e) => {\r\n    if (this.state.answer !== '') {\r\n      this.props.setQuestionAnswer(this.state.answer);\r\n    } else {\r\n      alert('Please select an answer');\r\n    }\r\n  };\r\n  nextQuestion = (e) => {\r\n    this.setState({ answer: '' });\r\n    this.props.nextQuestion();\r\n  };\r\n  // The render function, where we actually tell the browser what it should show\r\n  render() {\r\n    const {\r\n      question,\r\n      answers,\r\n      submitted,\r\n      total,\r\n      activeQuestion,\r\n      correct,\r\n      wrong,\r\n    } = this.props;\r\n    console.log(activeQuestion, 'active');\r\n    console.log(total, 'total');\r\n    return (\r\n      <div>\r\n        {!this.state.showResult ? (\r\n          <Fragment>\r\n            {' '}\r\n            {!question.showAnswer ? (\r\n              <Fragment>\r\n                <RadioGroup\r\n                  onChange={this.onRadioChange}\r\n                  options={question.options}\r\n                />\r\n                <Button type=\"primary\" onClick={this.answerQuestion}>\r\n                  Submit\r\n                </Button>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <RadioGroup\r\n                  onChange={this.onRadioChange}\r\n                  options={question.options}\r\n                  disabled\r\n                />\r\n                {activeQuestion < total - 1 ? (\r\n                  <Button type=\"primary\" onClick={this.nextQuestion}>\r\n                    Next\r\n                  </Button>\r\n                ) : (\r\n                  <Button type=\"primary\" onClick={this.showResult}>\r\n                    Show Result\r\n                  </Button>\r\n                )}\r\n              </Fragment>\r\n            )}\r\n            {submitted && answers ? (\r\n              <Fragment>\r\n                <p>Correct answer!</p>\r\n              </Fragment>\r\n            ) : null}\r\n            {submitted && !answers ? (\r\n              <Fragment>\r\n                <p>Wrong answer! Correct Answer is :{question.answers}</p>\r\n              </Fragment>\r\n            ) : null}\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <p>Your correct answer: {correct}</p>\r\n            <p>Your wrong answer: {wrong}</p>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { CheckboxGroup } from '@iso/components/uielements/checkbox';\r\nimport Button from '@iso/components/uielements/button';\r\n\r\nexport default class MultipleQuestion extends Component {\r\n  // Then we add our constructor which receives our props\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answer: '',\r\n      showResult: false,\r\n    };\r\n  }\r\n  onCheckboxChange = (e) => {\r\n    this.setState({ answer: e });\r\n  };\r\n  showResult = (e) => {\r\n    this.setState({ showResult: true });\r\n  };\r\n  answerQuestion = (e) => {\r\n    if (this.state.answer !== '') {\r\n      this.props.setQuestionAnswer(this.state.answer);\r\n    } else {\r\n      alert('Please select an answer');\r\n    }\r\n  };\r\n  nextQuestion = (e) => {\r\n    this.setState({ answer: '' });\r\n    this.props.nextQuestion();\r\n  };\r\n  // The render function, where we actually tell the browser what it should show\r\n  render() {\r\n    const {\r\n      question,\r\n      answers,\r\n      submitted,\r\n      total,\r\n      activeQuestion,\r\n      correct,\r\n      wrong,\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        {!this.state.showResult ? (\r\n          <Fragment>\r\n            {!question.showAnswer ? (\r\n              <Fragment>\r\n                <CheckboxGroup\r\n                  onChange={this.onCheckboxChange}\r\n                  options={question.options}\r\n                />\r\n                <Button type=\"primary\" onClick={this.answerQuestion}>\r\n                  Submit\r\n                </Button>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <CheckboxGroup\r\n                  onChange={this.onCheckboxChange}\r\n                  options={question.options}\r\n                  disabled\r\n                />\r\n                {activeQuestion < total - 1 ? (\r\n                  <Button type=\"primary\" onClick={this.nextQuestion}>\r\n                    Next\r\n                  </Button>\r\n                ) : (\r\n                  <Button type=\"primary\" onClick={this.showResult}>\r\n                    Show Result\r\n                  </Button>\r\n                )}\r\n              </Fragment>\r\n            )}\r\n\r\n            {submitted && answers ? (\r\n              <Fragment>\r\n                <p>Correct answer!</p>\r\n              </Fragment>\r\n            ) : null}\r\n            {submitted && !answers ? (\r\n              <Fragment>\r\n                <p>Wrong answer! Correct Answer is :{question.answers}</p>\r\n              </Fragment>\r\n            ) : null}\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <p>Your correct answer: {correct}</p>\r\n            <p>Your wrong answer: {wrong}</p>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SingleQuestion from './SingleQuestion';\r\nimport MultipleQuestion from './MultipleQuestion';\r\n\r\nexport default class Question extends Component {\r\n  // The render function, where we actually tell the browser what it should show\r\n  render() {\r\n    const {\r\n      question,\r\n      answers,\r\n      submitted,\r\n      total,\r\n      activeQuestion,\r\n      wrong,\r\n      correct,\r\n    } = this.props;\r\n    if (question.type === 'single') {\r\n      return (\r\n        <SingleQuestion\r\n          question={question}\r\n          setQuestionAnswer={this.props.setQuestionAnswer}\r\n          nextQuestion={this.props.nextQuestion}\r\n          answers={answers}\r\n          correct={correct}\r\n          wrong={wrong}\r\n          total={total}\r\n          activeQuestion={activeQuestion}\r\n          submitted={submitted}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <MultipleQuestion\r\n          question={question}\r\n          setQuestionAnswer={this.props.setQuestionAnswer}\r\n          nextQuestion={this.props.nextQuestion}\r\n          total={total}\r\n          correct={correct}\r\n          wrong={wrong}\r\n          activeQuestion={activeQuestion}\r\n          submitted={submitted}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@iso/components/utility/box';\r\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\nimport basicStyle from '@iso/assets/styles/constants';\r\nimport actions from '@iso/redux/quiz/actions';\r\n\r\nclass GettingStartedQuiz extends Component {\r\n  startQuiz = e => {\r\n    this.props.startQuiz();\r\n  };\r\n  // The render function, where we actually tell the browser what it should show\r\n  render() {\r\n    const { rowStyle, colStyle, gutter } = basicStyle;\r\n    return (\r\n      <LayoutWrapper>\r\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\r\n          <Col md={24} sm={24} xs={24} style={colStyle}>\r\n            <Box title={<IntlMessages id=\"Getting started your quiz\" />}>\r\n              <Button type=\"primary\" onClick={this.startQuiz}>\r\n                Start Quiz\r\n              </Button>\r\n            </Box>\r\n          </Col>\r\n        </Row>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.quiz,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { ...actions })(GettingStartedQuiz);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col } from 'antd';\r\nimport ContentHolder from '@iso/components/utility/contentHolder';\r\nimport Box from '@iso/components/utility/box';\r\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\nimport basicStyle from '@iso/assets/styles/constants';\r\nimport actions from '@iso/redux/quiz/actions';\r\nimport Question from './Question';\r\nimport GettingStartedQuiz from './GettingStartedQuiz';\r\n\r\n// const { getQuizData } = actions;\r\n\r\nfunction SingleQuiz(props) {\r\n  useEffect(() => {\r\n    props.getQuestionData();\r\n  }, [props]);\r\n  const { rowStyle, colStyle, gutter } = basicStyle;\r\n  const {\r\n    questions,\r\n    activeQuestion,\r\n    total,\r\n    submitted,\r\n    answers,\r\n    correct,\r\n    wrong,\r\n    gettingStarted,\r\n  } = props.quiz;\r\n  console.log(wrong);\r\n  console.log(correct);\r\n  return (\r\n    <LayoutWrapper>\r\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\r\n        <Col md={24} sm={24} xs={24} style={colStyle}>\r\n          {questions.data ? (\r\n            gettingStarted ? (\r\n              <Box\r\n                title={\r\n                  <IntlMessages id={questions.data[activeQuestion].question} />\r\n                }\r\n              >\r\n                <ContentHolder>\r\n                  <Question\r\n                    question={questions.data[activeQuestion]}\r\n                    setQuestionAnswer={props.setQuestionAnswer}\r\n                    nextQuestion={props.nextQuestion}\r\n                    correct={correct}\r\n                    wrong={wrong}\r\n                    answers={answers}\r\n                    total={total}\r\n                    activeQuestion={activeQuestion}\r\n                    submitted={submitted}\r\n                  />\r\n                </ContentHolder>\r\n              </Box>\r\n            ) : (\r\n              <GettingStartedQuiz gettingStarted={gettingStarted} />\r\n            )\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </LayoutWrapper>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.quiz,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { ...actions })(SingleQuiz);\r\n","import styled from 'styled-components';\r\n\r\nconst LayoutContentWrapper = styled.div`\r\n  padding: 40px 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 50px 20px;\r\n  }\r\n\r\n  @media (max-width: 580px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nexport { LayoutContentWrapper };\r\n","import React from 'react';\r\nimport { LayoutContentWrapper } from './layoutWrapper.style';\r\n\r\nexport default props => (\r\n  <LayoutContentWrapper\r\n    className={\r\n      props.className != null\r\n        ? `${props.className} isoLayoutContentWrapper`\r\n        : 'isoLayoutContentWrapper'\r\n    }\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </LayoutContentWrapper>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxTitle = styled.h3`\r\n   font-size: 14px;\r\n   font-weight: 500;\r\n   color: ${palette('text', 0)};\r\n   margin: 0;\r\n   margin-bottom: 5px;\r\n`;\r\n\r\nconst BoxSubTitle = styled.p`\r\n   font-size: 13px;\r\n   font-weight: 400;\r\n   color: ${palette('text', 3)};\r\n   line-height: 24px;\r\n`;\r\n\r\nexport { BoxTitle, BoxSubTitle };\r\n","import React from 'react';\r\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\r\n\r\nexport default (props) => {\r\n   return (\r\n      <div>\r\n         {props.title ? (\r\n            <BoxTitle className='isoBoxTitle'> {props.title} </BoxTitle>\r\n         ) : (\r\n            ''\r\n         )}\r\n         {props.subtitle ? (\r\n            <BoxSubTitle className='isoBoxSubTitle'>\r\n               {' '}\r\n               {props.subtitle}{' '}\r\n            </BoxSubTitle>\r\n         ) : (\r\n            ''\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxWrapper = styled.div`\r\n   width: 100%;\r\n   height: 100%;\r\n   padding: 20px;\r\n   background-color: #ffffff;\r\n   border: 1px solid ${palette('border', 0)};\r\n   margin: 0 0 30px;\r\n\r\n   &:last-child {\r\n      margin-bottom: 0;\r\n   }\r\n\r\n   @media only screen and (max-width: 767px) {\r\n      padding: 20px;\r\n      ${'' /* margin: 0 10px 30px; */};\r\n   }\r\n\r\n   &.half {\r\n      width: calc(50% - 34px);\r\n      @media (max-width: 767px) {\r\n         width: 100%;\r\n      }\r\n   }\r\n`;\r\n\r\nexport { BoxWrapper };\r\n","import React from 'react';\r\nimport BoxTitleWrapper from './boxTitle';\r\nimport { BoxWrapper } from './box.style';\r\n\r\nexport default (props) => (\r\n   <BoxWrapper\r\n      className={`${props.className ? props.className : ''} isoBoxWrapper`}\r\n      style={props.style}\r\n   >\r\n      <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\r\n      {props.children}\r\n   </BoxWrapper>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport WithDirection from '@iso/lib/helpers/rtl';\r\nconst WDContentHolderWrapper = styled.div`\r\n   margin-top: 30px;\r\n   -webkit-overflow-scrolling: touch;\r\n\r\n   .demoBtn {\r\n      margin-right: ${(props) => (props['data-rtl'] === 'rtl' ? '0' : '10px')};\r\n      margin-left: ${(props) => (props['data-rtl'] === 'rtl' ? '10px' : '0')};\r\n   }\r\n\r\n   .demoBtnsWrapper {\r\n      &:nth-child(1) {\r\n         margin-left: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '70px'};\r\n         margin-right: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '70px' : '0'};\r\n         white-space: nowrap;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n         width: 70px;\r\n         float: ${(props) => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      }\r\n\r\n      &:nth-child(3) {\r\n         width: 70px;\r\n         margin-left: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '295px'};\r\n         margin-right: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '295px' : '0'};\r\n      }\r\n\r\n      &:nth-child(4) {\r\n         margin-left: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '70px'};\r\n         margin-right: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '70px' : '0'};\r\n         clear: both;\r\n         white-space: nowrap;\r\n      }\r\n\r\n      @media only screen and (max-width: 480px) {\r\n         margin-left: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '8px' : '0 !important'};\r\n         white-space: nowrap;\r\n         margin-right: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0 !important' : '8px'};\r\n         float: none !important;\r\n      }\r\n\r\n      .demoPosBtn {\r\n         width: 70px;\r\n         margin-right: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '8px'};\r\n         margin-left: ${(props) => (props['data-rtl'] === 'rtl' ? '8px' : '0')};\r\n         margin-bottom: 8px;\r\n         padding: 0;\r\n\r\n         @media only screen and (max-width: 480px) {\r\n            width: 65px;\r\n         }\r\n      }\r\n   }\r\n\r\n   .ant-btn {\r\n      &:not(.demoPosBtn) {\r\n         &:last-child {\r\n            margin-right: 0;\r\n         }\r\n      }\r\n   }\r\n\r\n   .tooltipBtn {\r\n      display: inline-block;\r\n      line-height: 32px;\r\n      height: 32px;\r\n      width: 70px;\r\n      font-size: 14px;\r\n      text-align: center;\r\n      background: ${palette('secondary', 1)};\r\n      margin-right: ${(props) =>\r\n         props['data-rtl'] === 'rtl' ? 'auto' : '6px'};\r\n      margin-left: ${(props) => (props['data-rtl'] === 'rtl' ? '6px' : '0')};\r\n      margin-bottom: 6px;\r\n      border-radius: 6px;\r\n   }\r\n\r\n   .ant-progress {\r\n      &.ant-progress-circle {\r\n         margin-right: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '15px'};\r\n         margin-left: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '15px' : '0'};\r\n\r\n         &:last-child {\r\n            margin-right: ${(props) =>\r\n               props['data-rtl'] === 'rtl' ? '0' : '0'};\r\n            margin-left: ${(props) =>\r\n               props['data-rtl'] === 'rtl' ? '0' : '0'};\r\n         }\r\n      }\r\n   }\r\n\r\n   strong {\r\n      font-weight: 700;\r\n      font-size: 14px;\r\n   }\r\n`;\r\n\r\nconst ContentHolderWrapper = WithDirection(WDContentHolderWrapper);\r\n\r\nexport { ContentHolderWrapper };\r\n","import React from 'react';\r\nimport { ContentHolderWrapper } from './contentHolder.style';\r\n\r\nexport default (props) => (\r\n   <ContentHolderWrapper className='isoExampleWrapper' style={props.style}>\r\n      {props.children}\r\n   </ContentHolderWrapper>\r\n);\r\n","export const colors = {\r\n  blue: {\r\n    deep: 'rgb(0, 121, 191)',\r\n    light: 'lightblue',\r\n    lighter: '#d9fcff',\r\n    soft: '#E6FCFF',\r\n  },\r\n  black: '#4d4d4d',\r\n  shadow: 'rgba(0,0,0,0.2)',\r\n  grey: {\r\n    darker: '#C1C7D0',\r\n    dark: '#E2E4E6',\r\n    medium: '#DFE1E5',\r\n    N30: '#EBECF0',\r\n    light: '#F4F5F7',\r\n  },\r\n  green: 'rgb(185, 244, 188)',\r\n  white: 'white',\r\n  purple: 'rebeccapurple',\r\n  orange: '#FF991F',\r\n};\r\nexport const grid = 8;\r\n\r\nexport const borderRadius = 2;\r\nconst rowStyle = {\r\n  width: '100%',\r\n  display: 'flex',\r\n  flexFlow: 'row wrap',\r\n};\r\nconst colStyle = {\r\n  marginBottom: '16px',\r\n};\r\nconst gutter = 16;\r\n\r\nconst basicStyle = {\r\n  rowStyle,\r\n  colStyle,\r\n  gutter,\r\n};\r\nexport default basicStyle;\r\n","import { Checkbox } from 'antd';\r\nimport AntCheckbox from './styles/checkbox.style';\r\n\r\nconst checkbox = AntCheckbox(Checkbox);\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nexport default checkbox;\r\nexport { CheckboxGroup };\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst AntCheckbox = (ComponentName) => styled(ComponentName)`\r\n  &.ant-checkbox-wrapper {\r\n    font-size: 13px;\r\n    color: ${palette('text', 1)};\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nexport default AntCheckbox;\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst AntRadiobox = (ComponentName) => styled(ComponentName)`\r\n  &.ant-radio-wrapper,\r\n  .ant-radio-wrapper,\r\n  &.ant-radio-button-wrapper {\r\n    font-size: 13px;\r\n    color: ${palette('text', 1)};\r\n\r\n    .ant-radio-inner {\r\n      &:after {\r\n        width: 6px;\r\n        height: 6px;\r\n        top: 4px;\r\n        left: 4px;\r\n        background-color: ${palette('primary', 0)};\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n\r\n    .ant-radio-checked .ant-radio-inner,\r\n    .ant-radio-indeterminate .ant-radio-inner {\r\n      border-color: ${palette('primary', 0)};\r\n    }\r\n\r\n    .ant-radio:hover .ant-radio-inner,\r\n    .ant-radio-input:focus + .ant-radio-inner {\r\n      border-color: ${palette('primary', 0)};\r\n    }\r\n\r\n    .ant-radio-disabled .ant-radio-inner:after {\r\n      background-color: #ccc;\r\n    }\r\n\r\n    &:hover {\r\n      .ant-radio-inner {\r\n        border-color: ${palette('primary', 0)};\r\n      }\r\n    }\r\n\r\n    .ant-radio-checked {\r\n      .ant-radio-inner {\r\n        &:after {\r\n          transform: scale(1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-radio-button-wrapper {\r\n    &.ant-radio-button-wrapper-checked {\r\n      color: #ffffff;\r\n      background-color: ${palette('primary', 0)};\r\n      border-color: ${palette('primary', 0)};\r\n\r\n      &:not(.ant-radio-button-wrapper-disabled) {\r\n        /* background-color: ${palette('primary', 0)}; */\r\n        border-color: ${palette('primary', 0)};\r\n\r\n        &:hover {\r\n          /* background-color: ${palette('primary', 0)}; */\r\n          border-color: ${palette('primary', 0)};\r\n        }\r\n      }\r\n\r\n    }\r\n    :focus{\r\n      outline:none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AntRadiobox;\r\n","import { Radio } from 'antd';\r\nimport AntRadiobox from './styles/radiobox.style';\r\n\r\nconst RadioBox = AntRadiobox(Radio);\r\nconst RadioGroup = AntRadiobox(Radio.Group);\r\nconst RadioButton = AntRadiobox(Radio.Button);\r\n\r\nexport default RadioBox;\r\nexport { RadioGroup, RadioButton };\r\n"],"sourceRoot":""}