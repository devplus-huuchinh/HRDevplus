{"version":3,"sources":["containers/Note/Note.styles.js","containers/Note/NoteList.js","containers/Note/Note.js","components/Notification.js","../node_modules/antd/es/notification/style/css.js","components/ColorChooser.style.js","components/ColorChoser.js","components/EditableComponent.js"],"names":["NoteComponentWrapper","styled","div","props","palette","borderRadius","transition","NoteListSidebar","WithDirection","NoteListWrapper","React","useState","search","setSearch","notes","toUpperCase","filter","note","includes","filterNotes","className","placeholder","value","onChange","event","target","length","style","height","map","selectedId","deleteNote","changeNote","colors","activeClass","id","key","width","background","color","onClick","timeDifference","createTime","icon","CloseOutlined","type","singleNote","noteActions","addNote","editNote","changeColor","Header","Content","Notes","useSelector","state","seectedColor","dispatch","useDispatch","selectedNote","undefined","NoteList","v","autoFocus","createNotification","message","description","ColorChooserDropdown","visible","setVisibility","content","index","trigger","onVisibleChange","backgroundColor","EditableComponent","editable","setState","check","itemKey","rows","onPressEnter","CheckOutlined","EditOutlined"],"mappings":"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","file":"static/js/108.e0174bc4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition, borderRadius } from '@iso/lib/helpers/style_utils';\r\nimport WithDirection from '@iso/lib/helpers/rtl';\r\n\r\nconst NoteComponentWrapper = styled.div`\r\n  padding: 50px 35px;\r\n  display: flex;\r\n  height: 100%;\r\n  min-height: 300px;\r\n  background: none;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 40px 20px;\r\n    height: auto;\r\n    flex-direction: column;\r\n\r\n    &.ant-layout.ant-layout-has-sider {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n    padding: 50px 20px;\r\n  }\r\n\r\n  .isoNoteListSidebar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-shrink: 0;\r\n    ${'' /* height: 100%; */} background: #ffffff;\r\n    border-right: ${(props) => (props['data-rtl'] === 'rtl' ? 0 : 1)}px solid\r\n      ${palette('border', 0)};\r\n    border-left: ${(props) => (props['data-rtl'] === 'rtl' ? 1 : 0)}px solid\r\n      ${palette('border', 0)};\r\n\r\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n      width: 260px !important;\r\n      flex: 0 0 260px !important;\r\n      max-width: none !important;\r\n      min-width: 0 !important;\r\n    }\r\n    @media only screen and (max-width: 767px) {\r\n      width: auto !important;\r\n      max-width: 100% !important;\r\n      min-width: 0 !important;\r\n      margin-bottom: 30px;\r\n      flex: 0 !important;\r\n      overflow: hidden;\r\n      overflow-y: auto;\r\n    }\r\n  }\r\n\r\n  .isoNotepadWrapper {\r\n    background: #ffffff;\r\n\r\n    .isoHeader {\r\n      height: auto;\r\n      line-height: inherit;\r\n      padding: 20px 30px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-start;\r\n      flex-wrap: wrap;\r\n      flex-direction: row;\r\n      background-color: #ffffff;\r\n      border-bottom: 1px solid ${palette('border', 0)};\r\n\r\n      @media only screen and (max-width: 480px) {\r\n        padding: 20px;\r\n      }\r\n\r\n      @media only screen and (max-width: 400px) {\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n      }\r\n\r\n      .isoColorChooseWrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        flex-direction: row;\r\n        margin-right: ${(props) =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : 'auto'};\r\n        margin-left: ${(props) =>\r\n          props['data-rtl'] === 'rtl' ? 'auto' : 'inherit'};\r\n\r\n        span {\r\n          font-size: 13px;\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        .isoColorChooser {\r\n          width: 20px;\r\n          height: 20px;\r\n          cursor: pointer;\r\n          border: 0;\r\n          margin: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n          padding: 0;\r\n          ${borderRadius('3px')};\r\n\r\n          &:empty {\r\n            visibility: visible;\r\n          }\r\n        }\r\n      }\r\n\r\n      .isoAddNoteBtn {\r\n        background-color: ${palette('primary', 0)};\r\n        border: 0;\r\n        padding: 5px 15px;\r\n        margin-left: ${(props) =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : 'auto'};\r\n        margin-right: ${(props) =>\r\n          props['data-rtl'] === 'rtl' ? 'auto' : 'inherit'};\r\n        ${borderRadius('3px')};\r\n        ${transition()};\r\n\r\n        @media only screen and (max-width: 400px) {\r\n          margin: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '15px 0 0 0' : '15px 0 0 0'};\r\n        }\r\n\r\n        span {\r\n          font-size: 12px;\r\n          font-weight: 400;\r\n          padding: 0;\r\n          text-transform: uppercase;\r\n          color: #ffffff;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${palette('primary', 1)};\r\n        }\r\n      }\r\n    }\r\n\r\n    .isoNoteEditingArea {\r\n      display: flex;\r\n      height: 100%;\r\n\r\n      @media (max-width: 800px) {\r\n        height: 300px;\r\n      }\r\n\r\n      .isoNoteTextbox {\r\n        font-size: 14px;\r\n        color: ${palette('text', 2)};\r\n        line-height: 24px;\r\n        width: 100%;\r\n        height: calc(100% - 30px);\r\n        border: 0;\r\n        outline: 0;\r\n        padding: 20px 30px;\r\n        resize: none;\r\n\r\n        &:focus {\r\n          box-shadow: none;\r\n        }\r\n\r\n        @media only screen and (max-width: 480px) {\r\n          padding: 20px;\r\n        }\r\n      }\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      .isoNoteListSidebar.ant-layout-sider {\r\n        width: auto !important;\r\n        margin-bottom: 30px;\r\n        flex: 0 0 450px !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst NoteListSidebar = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: calc(100vh - 160px);\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    max-height: 60vh;\r\n  }\r\n\r\n  .isoSearchNotes {\r\n    flex-shrink: 0;\r\n    max-height: none;\r\n    width: 100%;\r\n    height: 77px;\r\n    padding: 0 15px;\r\n    padding-left: ${(props) => (props['data-rtl'] === 'rtl' ? '15px' : '35px')};\r\n    padding-right: ${(props) =>\r\n      props['data-rtl'] === 'rtl' ? '35px' : '15px'};\r\n    border: 0;\r\n    border-bottom: 1px solid rgba(230, 230, 230, 0.7);\r\n    outline: 0 !important;\r\n    /* overflow: hidden; */\r\n    background-color: #ffffff;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n    border-radius: 0;\r\n    box-shadow: none;\r\n    ${transition()};\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      height: 50px;\r\n    }\r\n\r\n    .ant-input-group {\r\n      height: 100%;\r\n    }\r\n\r\n    &.ant-input-affix-wrapper:focus,\r\n    &.ant-input-affix-wrapper-focused {\r\n      border-color: rgba(230, 230, 230, 0.7);\r\n    }\r\n\r\n    .ant-input {\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      color: ${palette('text', 0)};\r\n      line-height: inherit;\r\n      padding: 0;\r\n      border: 0;\r\n      height: 100%;\r\n\r\n      &:focus {\r\n        box-shadow: none;\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n      .ant-input {\r\n        border-color: rgba(230, 230, 230, 0.7) !important;\r\n      }\r\n    }\r\n\r\n    .ant-input-group-addon {\r\n      background: transparent;\r\n\r\n      button {\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-input-suffix {\r\n    left: ${(props) => (props['data-rtl'] === 'rtl' ? 'auto' : '10px')};\r\n    right: ${(props) => (props['data-rtl'] === 'rtl' ? '10px' : 'auto')};\r\n    color: ${palette('grayscale', 0)};\r\n\r\n    .ant-input-search-icon {\r\n      &:before {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .isoNoteList {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 100%;\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n\r\n    .isoList {\r\n      width: 100%;\r\n      margin: 0;\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      flex-shrink: 0;\r\n      padding: 0;\r\n      border-bottom: 1px solid ${palette('border', 0)};\r\n      text-align: ${(props) =>\r\n        props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n      position: relative;\r\n\r\n      &.active {\r\n        background-color: ${palette('secondary', 1)};\r\n      }\r\n\r\n      .isoNoteBGColor {\r\n        width: 5px;\r\n        display: flex;\r\n        margin: ${(props) =>\r\n          props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      .isoNoteText {\r\n        width: calc(100% - 60px);\r\n        margin: ${(props) =>\r\n          props['data-rtl'] === 'rtl' ? '0 0 0 20px' : '0 20px 0 0'};\r\n        padding: 20px 0;\r\n        cursor: pointer;\r\n\r\n        h3 {\r\n          width: 100%;\r\n          white-space: nowrap;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          color: ${palette('secondary', 2)};\r\n          font-weight: 500;\r\n        }\r\n\r\n        .isoNoteCreatedDate {\r\n          font-size: 13px;\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n      }\r\n\r\n      .isoDeleteBtn {\r\n        width: 24px;\r\n        height: 24px;\r\n        background-color: transparent;\r\n        flex-shrink: 0;\r\n        position: absolute;\r\n        top: 5px;\r\n        right: ${(props) => (props['data-rtl'] === 'rtl' ? 'inherit' : '5px')};\r\n        left: ${(props) => (props['data-rtl'] === 'rtl' ? '5px' : 'inherit')};\r\n        padding: 0;\r\n        border: 0;\r\n        font-size: 14px;\r\n        color: ${palette('grayscale', 0)};\r\n        ${transition()};\r\n\r\n        &:hover {\r\n          color: ${palette('primary', 0)};\r\n        }\r\n      }\r\n    }\r\n\r\n    .isoNotlistNotice {\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      color: ${palette('grayscale', 0)};\r\n      line-height: inherit;\r\n      padding: 30px 20px;\r\n    }\r\n\r\n    .isoNoResultMsg {\r\n      padding: 15px 20px;\r\n      text-align: center;\r\n      color: ${palette('secondary', 2)};\r\n      font-weight: 500;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default WithDirection(NoteComponentWrapper);\r\nconst NoteListWrapper = WithDirection(NoteListSidebar);\r\nexport { NoteListWrapper };\r\n","import React from 'react';\r\nimport { timeDifference } from '@iso/lib/helpers/utility';\r\nimport Button from '@iso/components/uielements/button';\r\nimport { InputSearch } from '@iso/components/uielements/input';\r\nimport { NoteListWrapper } from './Note.styles';\r\nimport Scrollbars from '@iso/components/utility/customScrollBar';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nfunction filterNotes(notes, search) {\r\n  search = search.toUpperCase();\r\n  if (search) {\r\n    return notes.filter((note) => note.note.toUpperCase().includes(search));\r\n  }\r\n  return notes;\r\n}\r\nexport default function (props) {\r\n  const [search, setSearch] = React.useState('');\r\n\r\n  function singleNote(note) {\r\n    const { selectedId, deleteNote, changeNote, colors } = props;\r\n\r\n    const activeClass = selectedId === note.id ? 'active' : '';\r\n    const onChange = () => changeNote(note.id);\r\n    const onDelete = () => deleteNote(note.id);\r\n    return (\r\n      <div className={`isoList ${activeClass}`} key={note.id}>\r\n        <div\r\n          className=\"isoNoteBGColor\"\r\n          style={{ width: '5px', background: colors[note.color] }}\r\n        />\r\n        <div className=\"isoNoteText\" onClick={onChange}>\r\n          <h3>{note.note}</h3>\r\n          <span className=\"isoNoteCreatedDate\">\r\n            {timeDifference(note.createTime)}\r\n          </span>\r\n        </div>\r\n        <Button\r\n          className=\"isoDeleteBtn\"\r\n          icon={<CloseOutlined />}\r\n          type=\"default\"\r\n          onClick={onDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  function onChange(event) {\r\n    setSearch(event.target.value);\r\n  }\r\n  const notes = filterNotes(props.notes, search);\r\n  return (\r\n    <NoteListWrapper className=\"isoNoteListWrapper\">\r\n      <InputSearch\r\n        placeholder=\"Search Notes\"\r\n        className=\"isoSearchNotes\"\r\n        value={search}\r\n        onChange={onChange}\r\n      />\r\n      <div className=\"isoNoteList\">\r\n        {notes && notes.length > 0 ? (\r\n          <Scrollbars style={{ height: 'calc(100vh - 70px)' }}>\r\n            {notes.map((note) => singleNote(note))}\r\n          </Scrollbars>\r\n        ) : (\r\n          <span className=\"isoNoResultMsg\">No note found</span>\r\n        )}\r\n      </div>\r\n    </NoteListWrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport noteActions from '@iso/redux/notes/actions';\r\nimport NoteList from './NoteList';\r\nimport { ColorChoser } from '@iso/components/';\r\nimport Button from '@iso/components/uielements/button';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\nimport NoteComponentWrapper from './Note.styles';\r\nimport { Textarea } from '@iso/components/uielements/input';\r\n\r\nconst { changeNote, addNote, editNote, deleteNote, changeColor } = noteActions;\r\nconst { Header, Content } = Layout;\r\nexport default function Notes() {\r\n  const { notes, selectedId, colors, seectedColor } = useSelector(\r\n    (state) => state.Notes\r\n  );\r\n  const dispatch = useDispatch();\r\n  function updateNote(event) {\r\n    dispatch(editNote(selectedId, event.target.value));\r\n  }\r\n  const selectedNote =\r\n    selectedId !== undefined\r\n      ? notes.filter((note) => note.id === selectedId)[0]\r\n      : null;\r\n  return (\r\n    <NoteComponentWrapper className=\"isomorphicNoteComponent\">\r\n      <div style={{ width: '340px' }} className=\"isoNoteListSidebar\">\r\n        <NoteList\r\n          notes={notes}\r\n          selectedId={selectedId}\r\n          changeNote={(id) => dispatch(changeNote(id))}\r\n          deleteNote={(id) => dispatch(deleteNote(id))}\r\n          colors={colors}\r\n        />\r\n      </div>\r\n      <Layout className=\"isoNotepadWrapper\">\r\n        <Header className=\"isoHeader\">\r\n          {selectedId !== undefined ? (\r\n            <div className=\"isoColorChooseWrapper\">\r\n              <ColorChoser\r\n                colors={colors}\r\n                changeColor={(v) => dispatch(changeColor(v))}\r\n                seectedColor={seectedColor}\r\n              />\r\n              <span>\r\n                <IntlMessages id=\"notes.ChoseColor\" />\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"isoAddNoteBtn\"\r\n            onClick={() => dispatch(addNote())}\r\n          >\r\n            <IntlMessages id=\"notes.addNote\" />\r\n          </Button>\r\n        </Header>\r\n        <Content className=\"isoNoteEditingArea\">\r\n          {selectedId !== undefined ? (\r\n            <Textarea\r\n              className=\"isoNoteTextbox\"\r\n              value={selectedNote.note}\r\n              onChange={updateNote}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            ''\r\n          )}\r\n          {/*{selectedId !== undefined ? <span>{`created at ${selectedNote.createTime}`}</span> : ''}*/}\r\n        </Content>\r\n      </Layout>\r\n    </NoteComponentWrapper>\r\n  );\r\n}\r\n","import { notification } from 'antd';\r\n\r\nconst createNotification = (type, message, description) => {\r\n  notification[type]({\r\n    message,\r\n    description,\r\n  });\r\n};\r\nexport default createNotification;\r\n","import '../../style/default.css';\nimport './index.css';","import styled from 'styled-components';\r\nimport { borderRadius } from '@iso/lib/helpers/style_utils';\r\nimport WithDirection from '@iso/lib/helpers/rtl';\r\nconst ColorChooserDropdown = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  max-width: 160px;\r\n\r\n  .ant-btn {\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 0;\r\n    outline: 0;\r\n    padding: 0;\r\n    margin: ${(props) =>\r\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n    ${borderRadius('3px')};\r\n\r\n    &:empty {\r\n      visibility: visible;\r\n    }\r\n\r\n    &:last-child {\r\n      margin: 0;\r\n    }\r\n\r\n    &:nth-child(n + 6) {\r\n      margin-top: 15px;\r\n    }\r\n\r\n    &:nth-child(5n) {\r\n      margin-right: 0;\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default WithDirection(ColorChooserDropdown);\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport Popover from './uielements/popover';\r\nimport ColorChooserDropdown from './ColorChooser.style';\r\n\r\nexport default function ({ colors, seectedColor, changeColor }) {\r\n  const [visible, setVisibility] = React.useState(false);\r\n\r\n  function hide() {\r\n    setVisibility(false);\r\n  }\r\n  function handleVisibleChange() {\r\n    setVisibility((visible) => !visible);\r\n  }\r\n  const content = () => (\r\n    <ColorChooserDropdown className=\"isoColorOptions\">\r\n      {colors.map((color, index) => {\r\n        const onClick = () => {\r\n          hide();\r\n          changeColor(index);\r\n        };\r\n        const style = {\r\n          background: color,\r\n        };\r\n        return <Button key={index} onClick={onClick} style={style} />;\r\n      })}\r\n    </ColorChooserDropdown>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={content()}\r\n      trigger=\"click\"\r\n      visible={visible}\r\n      onVisibleChange={handleVisibleChange}\r\n    >\r\n      <Button\r\n        style={{ backgroundColor: colors[seectedColor] }}\r\n        className=\"isoColorChooser\"\r\n      />\r\n    </Popover>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { Textarea as Input } from './uielements/input';\r\n\r\nexport default function EditableComponent(props) {\r\n  const [state, setState] = React.useState({\r\n    value: props.value,\r\n    editable: false,\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const value = event.target.value;\r\n    setState({ ...state, value });\r\n  }\r\n  function check() {\r\n    setState({ ...state, editable: false });\r\n    if (props.onChange) {\r\n      props.onChange(props.itemKey, state.value);\r\n    }\r\n  }\r\n  function edit() {\r\n    setState({ ...state, editable: true });\r\n  }\r\n\r\n  const { value, editable } = state;\r\n  return (\r\n    <div className=\"isoNoteContent\">\r\n      {editable ? (\r\n        <div className=\"isoNoteEditWrapper\">\r\n          <Input\r\n            rows={3}\r\n            value={value}\r\n            onChange={handleChange}\r\n            onPressEnter={check}\r\n          />\r\n          <CheckOutlined className=\"isoNoteEditIcon\" onClick={check} />\r\n        </div>\r\n      ) : (\r\n        <p className=\"isoNoteTextWrapper\" onClick={edit}>\r\n          {value || ' '}\r\n          <EditOutlined className=\"isoNoteEditIcon\" />\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}